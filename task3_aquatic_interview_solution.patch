diff --git a/environment.yml b/environment.yml
index d44b5b0..59cfe28 100644
--- a/environment.yml
+++ b/environment.yml
@@ -8,3 +8,7 @@ dependencies:
   - python=3.10.6
   - pytest=7.1.2
   - ipython=8.4.0
+  - pandas
+  - pip
+  - pip:
+    - argparse
diff --git a/interview/weather.py b/interview/weather.py
index 64d3eaf..3f3f632 100644
--- a/interview/weather.py
+++ b/interview/weather.py
@@ -1,3 +1,35 @@
+import argparse
+import pandas as pd
 
-def process_csv(reader, writer):
-    writer.write(f"Saw {len(reader.readlines())} lines" + "\n")
+def process_csv(input_file, output_file):
+    df = pd.read_csv(input_file)
+    df["Measurement Timestamp"] = pd.to_datetime(df["Measurement Timestamp"])
+    df["Date"] = df["Measurement Timestamp"].dt.date
+
+    
+    daily_summary = (
+        df.groupby(["Station Name", "Date"])
+        .agg(
+            Start_Temperature=("Air Temperature", lambda x: x.iloc[0]),
+            End_Temperature=("Air Temperature", lambda x: x.iloc[-1]),
+            High_Temperature=("Air Temperature", "max"),
+            Low_Temperature=("Air Temperature", "min"),
+        )
+        .reset_index()
+    )
+
+    
+    daily_summary.to_csv(output_file, index=False)
+    print(f"Daily temperature aggregates saved to {output_file}")
+
+if __name__ == "__main__":
+    
+    parser = argparse.ArgumentParser(description="Aggregate hourly temperature data into daily statistics.")
+    parser.add_argument("input_file", help="Path to the input CSV file with hourly temperature data.")
+    parser.add_argument("output_file", help="Path to save the output CSV file with daily aggregates.")
+
+    
+    args = parser.parse_args()
+
+    
+    process_csv(args.input_file, args.output_file)
\ No newline at end of file
